---
// Import the Image component
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

// Define props from Astro
const { title, subTitle, partners } = Astro.props;

interface Partner {
  icon?: ImageMetadata; // Image metadata from Astro
  svgIcon?: string; // SVG string
  name?: string;
  href?: string;
}

// Define TypeScript interface for props
interface Props {
  title: string;
  subTitle?: string;
  partners?: Partner[];
}
---

<section
  class="mx-auto max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 2xl:max-w-full"
>
  <!-- Title and description -->
  <div class="mx-auto mb-6 w-full space-y-1 text-center sm:w-1/2 lg:w-1/3">
    <h2
      class="text-balance text-2xl font-bold leading-tight text-neutral-800 dark:text-neutral-200 sm:text-3xl"
    >
      {title}
    </h2>
    {
      subTitle && (
        <p class="text-pretty leading-tight text-neutral-600 dark:text-neutral-400">
          {subTitle}
        </p>
      )
    }
  </div>
  <!-- Carrusel Container -->
  <div class="overflow-hidden relative max-w-4xl mx-auto">
    <div class="carousel-viewport">
      <div 
        id="carousel-track" 
        class="carousel-track flex items-center gap-8 sm:gap-12 md:gap-16"
      >
      <!-- Triple duplicación para efecto infinito suave -->
      {partners && partners.length > 0 && (
        <>
          {/* Primera copia de partners */}
          {partners.map((partner, index) => (
            <div 
              class="carousel-item flex-shrink-0 flex items-center justify-center w-32 h-20"
            >
              <a 
                href={partner.href} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="transition-all duration-300 hover:scale-110 hover:opacity-80 w-full h-full flex items-center justify-center"
              >
                {partner.svgIcon ? (
                  <div set:html={partner.svgIcon} class="max-w-full max-h-full" />
                ) : partner.icon ? (
                  <Image
                    src={partner.icon}
                    alt={partner.name || 'Cliente'}
                    class="object-contain max-w-full max-h-full"
                    width={120}
                    height={80}
                  />
                ) : null}
              </a>
            </div>
          ))}
          {/* Segunda copia para efecto infinito */}
          {partners.map((partner, index) => (
            <div 
              class="carousel-item flex-shrink-0 flex items-center justify-center w-32 h-20"
            >
              <a 
                href={partner.href} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="transition-all duration-300 hover:scale-110 hover:opacity-80 w-full h-full flex items-center justify-center"
              >
                {partner.svgIcon ? (
                  <div set:html={partner.svgIcon} class="max-w-full max-h-full" />
                ) : partner.icon ? (
                  <Image
                    src={partner.icon}
                    alt={partner.name || 'Cliente'}
                    class="object-contain max-w-full max-h-full"
                    width={120}
                    height={80}
                  />
                ) : null}
              </a>
            </div>
          ))}
          {/* Tercera copia para mayor suavidad */}
          {partners.map((partner, index) => (
            <div 
              class="carousel-item flex-shrink-0 flex items-center justify-center w-32 h-20"
            >
              <a 
                href={partner.href} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="transition-all duration-300 hover:scale-110 hover:opacity-80 w-full h-full flex items-center justify-center"
              >
                {partner.svgIcon ? (
                  <div set:html={partner.svgIcon} class="max-w-full max-h-full" />
                ) : partner.icon ? (
                  <Image
                    src={partner.icon}
                    alt={partner.name || 'Cliente'}
                    class="object-contain max-w-full max-h-full"
                    width={120}
                    height={80}
                  />
                ) : null}
              </a>
            </div>
          ))}
        </>
      )}
      </div>
    </div>
  </div>
</section>

<style>
  .carousel-viewport {
    overflow: hidden;
    width: 100%;
  }

  .carousel-track {
    animation: infinite-scroll 20s linear infinite;
    width: max-content;
  }

  .carousel-track:hover {
    animation-play-state: paused;
  }

  .carousel-item {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 128px;
    height: 80px;
  }

  .carousel-item:hover {
    animation-play-state: paused;
  }

  @keyframes infinite-scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-33.333%);
    }
  }

  /* Asegurar que no haya saltos visuales */
  .carousel-track * {
    backface-visibility: hidden;
    transform: translateZ(0);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const carouselTrack = document.getElementById('carousel-track');
    const carouselItems = document.querySelectorAll('.carousel-item');

    if (carouselTrack && carouselItems.length > 0) {
      // Pausar animación al hacer hover sobre cualquier item
      carouselItems.forEach(item => {
        item.addEventListener('mouseenter', () => {
          carouselTrack.style.animationPlayState = 'paused';
        });

        item.addEventListener('mouseleave', () => {
          carouselTrack.style.animationPlayState = 'running';
        });
      });

      // También pausar al hacer hover sobre el track completo
      carouselTrack.addEventListener('mouseenter', () => {
        carouselTrack.style.animationPlayState = 'paused';
      });

      carouselTrack.addEventListener('mouseleave', () => {
        carouselTrack.style.animationPlayState = 'running';
      });
    }
  });
</script>
